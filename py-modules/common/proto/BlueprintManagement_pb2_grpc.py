#  Copyright Â© 2018-2019 AT&T Intellectual Property.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import BlueprintManagement_pb2 as BlueprintManagement__pb2


class BlueprintManagementServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.downloadBlueprint = channel.unary_unary(
        '/org.onap.ccsdk.cds.controllerblueprints.management.api.BlueprintManagementService/downloadBlueprint',
        request_serializer=BlueprintManagement__pb2.BlueprintDownloadInput.SerializeToString,
        response_deserializer=BlueprintManagement__pb2.BlueprintManagementOutput.FromString,
        )
    self.uploadBlueprint = channel.unary_unary(
        '/org.onap.ccsdk.cds.controllerblueprints.management.api.BlueprintManagementService/uploadBlueprint',
        request_serializer=BlueprintManagement__pb2.BlueprintUploadInput.SerializeToString,
        response_deserializer=BlueprintManagement__pb2.BlueprintManagementOutput.FromString,
        )
    self.removeBlueprint = channel.unary_unary(
        '/org.onap.ccsdk.cds.controllerblueprints.management.api.BlueprintManagementService/removeBlueprint',
        request_serializer=BlueprintManagement__pb2.BlueprintRemoveInput.SerializeToString,
        response_deserializer=BlueprintManagement__pb2.BlueprintManagementOutput.FromString,
        )
    self.bootstrapBlueprint = channel.unary_unary(
        '/org.onap.ccsdk.cds.controllerblueprints.management.api.BlueprintManagementService/bootstrapBlueprint',
        request_serializer=BlueprintManagement__pb2.BlueprintBootstrapInput.SerializeToString,
        response_deserializer=BlueprintManagement__pb2.BlueprintManagementOutput.FromString,
        )


class BlueprintManagementServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def downloadBlueprint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def uploadBlueprint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def removeBlueprint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def bootstrapBlueprint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BlueprintManagementServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'downloadBlueprint': grpc.unary_unary_rpc_method_handler(
          servicer.downloadBlueprint,
          request_deserializer=BlueprintManagement__pb2.BlueprintDownloadInput.FromString,
          response_serializer=BlueprintManagement__pb2.BlueprintManagementOutput.SerializeToString,
      ),
      'uploadBlueprint': grpc.unary_unary_rpc_method_handler(
          servicer.uploadBlueprint,
          request_deserializer=BlueprintManagement__pb2.BlueprintUploadInput.FromString,
          response_serializer=BlueprintManagement__pb2.BlueprintManagementOutput.SerializeToString,
      ),
      'removeBlueprint': grpc.unary_unary_rpc_method_handler(
          servicer.removeBlueprint,
          request_deserializer=BlueprintManagement__pb2.BlueprintRemoveInput.FromString,
          response_serializer=BlueprintManagement__pb2.BlueprintManagementOutput.SerializeToString,
      ),
      'bootstrapBlueprint': grpc.unary_unary_rpc_method_handler(
          servicer.bootstrapBlueprint,
          request_deserializer=BlueprintManagement__pb2.BlueprintBootstrapInput.FromString,
          response_serializer=BlueprintManagement__pb2.BlueprintManagementOutput.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'org.onap.ccsdk.cds.controllerblueprints.management.api.BlueprintManagementService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
