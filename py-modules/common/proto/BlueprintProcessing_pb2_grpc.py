# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import proto.BlueprintProcessing_pb2 as BlueprintProcessing__pb2


class BlueprintProcessingServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.process = channel.stream_stream(
        '/org.onap.ccsdk.cds.controllerblueprints.processing.api.BlueprintProcessingService/process',
        request_serializer=BlueprintProcessing__pb2.ExecutionServiceInput.SerializeToString,
        response_deserializer=BlueprintProcessing__pb2.ExecutionServiceOutput.FromString,
        )


class BlueprintProcessingServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def process(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BlueprintProcessingServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'process': grpc.stream_stream_rpc_method_handler(
          servicer.process,
          request_deserializer=BlueprintProcessing__pb2.ExecutionServiceInput.FromString,
          response_serializer=BlueprintProcessing__pb2.ExecutionServiceOutput.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'org.onap.ccsdk.cds.controllerblueprints.processing.api.BlueprintProcessingService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
